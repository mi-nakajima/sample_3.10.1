name: Flutter CI iOS prd (Automatically manage signing with Cloud signing)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      FLUTTER_VERSION: ${{ steps.set_vars.outputs.FLUTTER_VERSION }}
    steps:
      - name: Set vars
        id: set_vars
        run: |
          readonly FLUTTER_VERSION="3.10.1"
          echo "FLUTTER_VERSION=$FLUTTER_VERSION" >> $GITHUB_OUTPUT

  build:
    #runs-on: macos-latest
    #runs-on: macos-12
    runs-on: macos-13
    timeout-minutes: 30
    environment:
      name: 'PRD_IOS_CERTIFICATES'
    needs: set-env

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract App Store Connect API Private Key in ./private_keys
        env:
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_AUTHKEY_P8_BASE64: ${{ secrets.APPLE_API_AUTHKEY_P8_BASE64 }}
        run: |
          mkdir ./private_keys
          echo -n "$APPLE_API_AUTHKEY_P8_BASE64" | base64 --decode --output ./private_keys/AuthKey_$APPLE_API_KEY_ID.p8

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ needs.set-env.outputs.FLUTTER_VERSION }}  # 取得したFlutterバージョンを使用
          cache: true

      # flutter cleanを実行してキャッシュを削除
      - name: Clean Flutter build
        run: flutter clean

      - name: Run flutter pub get
        run: flutter pub get

      - name: Run flutter build
        id: build
        run: flutter build ipa --release --no-codesign --export-options-plist=./ios/Runner/ExportOptions_prd.plist 

      - name: Archive by xcodebuild
        env:
          APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
        run: xcodebuild archive CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO -workspace ./ios/Runner.xcworkspace -scheme Runner -configuration Release -archivePath ./build/ios/Runner.xcarchive

      - name: Export check
        env:
          APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
        run: |
          ls -l ./build/ios/
          cat ./ios/Runner/ExportOptions_prd.plist 
          echo $APPLE_API_ISSUER_ID
          echo $APPLE_API_KEY_ID
          ls -l `pwd`/private_keys/AuthKey_$APPLE_API_KEY_ID.p8

      - name: Export by xcodebuild
        env:
          APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
        run: xcodebuild -exportArchive -archivePath ./build/ios/Runner.xcarchive -exportPath ./build/ios/ipa -exportOptionsPlist ./ios/Runner/ExportOptions_prd.plist -allowProvisioningUpdates -authenticationKeyIssuerID $APPLE_API_ISSUER_ID -authenticationKeyID $APPLE_API_KEY_ID -authenticationKeyPath `pwd`/private_keys/AuthKey_$APPLE_API_KEY_ID.p8

      - name: Detect path for ipa file
        run: |
          echo "IPA_PATH=$(find build/ios/ipa -type f -name '*.ipa')" >> $GITHUB_ENV

      - name: Upload to App Store Connect
        env:
          APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
        run: xcrun altool --upload-app --type ios -f $IPA_PATH --apiKey $APPLE_API_KEY_ID --apiIssuer $APPLE_API_ISSUER_ID
