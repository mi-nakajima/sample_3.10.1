name: Flutter CI Android

# ワークフローをトリガーするイベントを定義
on:
  workflow_dispatch:
#on:
#  push:
#    branches:
#      - main  # mainブランチへのpush時に実行
#  pull_request:
#    branches:
#      - main  # mainブランチへのPR作成時に実行

# ワークフロー内のジョブを定義
jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      FLUTTER_VERSION: ${{ steps.set_vars.outputs.FLUTTER_VERSION }}
    steps:
      - name: Set vars
        id: set_vars
        run: |
          readonly FLUTTER_VERSION="3.10.1"
          echo "FLUTTER_VERSION=$FLUTTER_VERSION" >> $GITHUB_OUTPUT

  build:
    # ジョブが実行される仮想環境を指定
    runs-on: ubuntu-latest
    environment:
      name: KEY_STORE_PASSWORD

    steps:
    # リポジトリのコードをチェックアウト
    - name: Checkout code
      uses: actions/checkout@v2
    
    # fvmのバージョンを取得
    #- name: "Read flutter version from fvm config"
    #  id: flutter_info
    #  run: |
    #    FLUTTER_VERSION=$(jq -r '.flutterSdkVersion' ./.fvm/fvm_config.json)
    #    echo "FLUTTER_VERSION=$FLUTTER_VERSION" >> $GITHUB_ENV
    #  shell: bash

    # Flutterのセットアップ
    - name: "Setup Flutter"
      uses: subosito/flutter-action@v2
      with:
        #flutter-version: ${{ env.FLUTTER_VERSION }}  # 取得したFlutterバージョンを使用
        #flutter-version: ${{ needs.set-env.outputs.FLUTTER_VERSION }}  # 取得したFlutterバージョンを使用
        flutter-version: "3.10.1"
        cache: true

    # flutter cleanを実行してキャッシュを削除
    - name: Clean Flutter build
      run: flutter clean

    # Flutterの依存関係をインストール
    - name: Install dependencies
      run: flutter pub get

    # リモートリポジトリでGitHub Secretsから.envファイルを動的に作成
    #- name: Create .env
    #  run: echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env

    # リントチェックを実行
    - name: Run linter
      run: flutter analyze

    # テストを実行
    - name: Run tests
      run: flutter test

    # Androidのkeystoreファイル（key.jks）をSecretsからデコードして配置
    - name: Decode keystore
      run: echo "${{ secrets.SIGNING_KEY }}" | base64 -d > android/app/key.jks

    # Androidのビルド（Secretsから署名情報を取得）
    - name: Build APK (Android)
      run: flutter build apk --release
      env:
        KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        ALIAS: ${{ secrets.ALIAS }}
        KEY_PATH: key.jks

    # ビルドしたapkをgithub Actionsアップロード
    - name: "Deploy apk 🚀"
      uses: actions/upload-artifact@v4
      with:
        name: release-apk  # アーティファクトの名前
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 7 # 7日間保存
